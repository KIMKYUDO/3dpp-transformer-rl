최종 목표: 불규칙한 입력 -> AI를 활용하여 성능 편차를 감소 및 성능 향상
-> 
테스트: 가변하는 입력에 반복 실험하여
주요성능지표(KPI) 분석 및 검증
학습 결과 "3D 시각화"

모델 구조: 트랜스포머 아키텍처[(박스 상태, 컨테이너 상태)인코더 -> 백본(입력 처리 및 출력) -> (박스 선택, 박스 위치, 박스 방향, 가치 함수-KPI)디코더]
알고리즘: 박스 경계 처리 방식(AABB, height_map), 박스 입력 순서(FFD, Layer-building), 강화 학습(BC방식)

성능(KPI)을 끌어올리기 위한 방식: 알고리즘 수정, 모델 파라미터 수정, 모델 수정
주요 개념에 대한 이해가 필요: embeding, attention-transformer, softmax-Decoder, 손실함수(베이스라인 학습)

Behavioral Cloning Pre-training(사전 지식 입력): action(선택, 위치, 방향)선택 확률 분포 즉, 정책의 초기 상태를 랜덤 대신 박스 입력 순서를 선택하여 여러번 궤적을 쌓은 후 얻어낸 평균 로그를 지도학습으로 상태를 학습 후에 강화 학습




1. 아키텍처·구조
*제안서에 적혀있던 모델 구조 외에 추가 지침이 있는지 없음
*3D 시각화에 활용할 권장 프레임워크(예: PyVista, Three.js, Unity 등)가 있는지? 없음

2. 데이터·제약 조건
*컨테이너 높이에 대한 실제 산업 표준 제한 값?, 박스 규격·분포 데이터는 기업 내부 반품 물류 데이터를 활용 가능한지? 
박스 크기·개수 입력은 **사전 확정 데이터(batch)**인지 실시간으로 변경되는 데이터인지?
박스 개수: 사전 확정 데이터(batch), 20개(랜덤 생성), 가로세로높이 컨테이너 제한 길이(논문)

3. KPI·성능 검증
*공간 활용률에 대한 언급만 있었는데 추가적인 성능 지표가 있는지? 없음

gpu, 병렬프로그래밍 예정

학습할 때 서버: local, colab
10월 이후 클라우드로 서버 제공예정


